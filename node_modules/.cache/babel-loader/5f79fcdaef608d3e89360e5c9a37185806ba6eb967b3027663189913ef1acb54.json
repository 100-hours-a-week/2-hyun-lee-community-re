{"ast":null,"code":"function getBaseUrl() {\n  const hostname = window.location.hostname;\n  if (hostname === 'localhost') {\n    return 'http://localhost:3001/api';\n  } else if (hostname === 'communityapp-env.eba-6tkf3pgq.ap-northeast-2.elasticbeanstalk.com') {\n    return 'http://communityapp-env.eba-6tkf3pgq.ap-northeast-2.elasticbeanstalk.com/api';\n  } else {\n    return 'http://52.78.32.212:3001/api';\n  }\n}\nconst BASE_URL = getBaseUrl();\nconst CDN_URL = 'https://d2m8tt5bgy55i.cloudfront.net/';\nconst S3_URL = 'https://s3.ap-northeast-2.amazonaws.com/hyun.lee.bucket/';\nexport async function fetchPosts() {\n  const response = await fetch(`${BASE_URL}/posts`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include'\n  });\n  return response.json();\n}\nexport async function fetchPostDetails(post_id) {\n  const response = await fetch(`${BASE_URL}/posts/${post_id}`, {\n    method: 'GET',\n    credentials: 'include'\n  });\n  return response.json();\n}\nexport async function updatePostViews(post_id) {\n  const response = await fetch(`${BASE_URL}/posts/${post_id}`, {\n    method: 'PATCH',\n    credentials: 'include'\n  });\n  return response.json();\n}\nexport async function createPost(formData) {\n  const response = await fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    body: formData,\n    credentials: 'include'\n  });\n  return response.json();\n}\nexport async function updatePost(formData, post_id) {\n  const response = await fetch(`${BASE_URL}/posts/update/${post_id}`, {\n    method: 'PATCH',\n    body: formData,\n    credentials: 'include'\n  });\n  return response.json();\n}\nexport async function deletePost(post_id) {\n  const response = await fetch(`${BASE_URL}/posts/${post_id}`, {\n    method: 'DELETE',\n    credentials: 'include'\n  });\n  return response.json();\n}\nexport async function userLikeStatus(post_id) {\n  const response = await fetch(`${BASE_URL}/likes/user/status/${post_id}`, {\n    method: 'GET',\n    credentials: 'include'\n  });\n  return response.json();\n}\nexport async function updatePostLikes(post_id, user_id) {\n  const response = await fetch(`${BASE_URL}/posts/likes/${post_id}/${user_id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      post_id: post_id\n    }),\n    credentials: 'include'\n  });\n  return response.json();\n}\nexport async function updatePostCommentsCount(post_id) {\n  const response = await fetch(`${BASE_URL}/posts/comments/counts/${post_id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      post_id: post_id\n    }),\n    credentials: 'include'\n  });\n  return response.json();\n}","map":{"version":3,"names":["getBaseUrl","hostname","window","location","BASE_URL","CDN_URL","S3_URL","fetchPosts","response","fetch","method","headers","credentials","json","fetchPostDetails","post_id","updatePostViews","createPost","formData","body","updatePost","deletePost","userLikeStatus","updatePostLikes","user_id","JSON","stringify","updatePostCommentsCount"],"sources":["/Users/ijuhyeon/Documents/community/2-hyun-lee-community-re/my-react-app/src/api/postApi.js"],"sourcesContent":["function getBaseUrl() {\n    const hostname = window.location.hostname;\n    if (hostname === 'localhost') {\n      return 'http://localhost:3001/api'; \n    } else if (hostname === 'communityapp-env.eba-6tkf3pgq.ap-northeast-2.elasticbeanstalk.com') {\n        return 'http://communityapp-env.eba-6tkf3pgq.ap-northeast-2.elasticbeanstalk.com/api';\n      } else {\n        return 'http://52.78.32.212:3001/api'; \n      }\n  }\n  \nconst BASE_URL = getBaseUrl();\nconst CDN_URL = 'https://d2m8tt5bgy55i.cloudfront.net/';\nconst S3_URL = 'https://s3.ap-northeast-2.amazonaws.com/hyun.lee.bucket/';\n  \n\n\n\n\nexport async function fetchPosts(){\n    const response = await fetch(`${BASE_URL}/posts`,{\n        method:'GET',\n        headers: {\n            'Content-Type': 'application/json'  \n        },\n        credentials: 'include',     \n    });\n    return response.json();\n}\n\n\nexport async function fetchPostDetails(post_id){\n    const response = await fetch(`${BASE_URL}/posts/${post_id}`,{\n        method:'GET',\n        credentials: 'include'\n    });\n    return response.json();\n}\n\nexport async function updatePostViews(post_id){\n    const response = await fetch(`${BASE_URL}/posts/${post_id}`,{\n        method:'PATCH',\n        credentials: 'include'\n    });\n    return response.json();\n}\n\n\n\nexport async function createPost(formData){\n    const response= await fetch(`${BASE_URL}/posts`,{\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n    });\n    return response.json();\n}\n\n\nexport async function updatePost(formData,post_id) {\n    const response = await fetch(`${BASE_URL}/posts/update/${post_id}`,{\n        method:'PATCH',\n        body: formData,\n        credentials: 'include'\n    });\n    return response.json();\n    \n}\n\nexport async function deletePost(post_id){\n    const response = await fetch(`${BASE_URL}/posts/${post_id}`,{\n        method:'DELETE',\n        credentials: 'include'\n    });\n    return response.json();\n}   \n\n\nexport async function userLikeStatus(post_id){\n    const response = await fetch(`${BASE_URL}/likes/user/status/${post_id}`,{\n        method:'GET',\n        credentials: 'include'\n    });\n    return response.json();\n}\n\n\nexport async function updatePostLikes(post_id,user_id){\n    const response = await fetch(`${BASE_URL}/posts/likes/${post_id}/${user_id}`,{\n        method:'PATCH',\n        headers:{\n            'Content-Type' : 'application/json'\n        },\n        body : JSON.stringify({post_id:post_id}),\n        credentials: 'include'\n    });\n    return response.json();\n}\n\nexport async function updatePostCommentsCount(post_id){\n    const response = await fetch(`${BASE_URL}/posts/comments/counts/${post_id}`,{\n        method:'PATCH',\n        headers:{\n            'Content-Type' : 'application/json'\n        },\n        body : JSON.stringify({post_id:post_id}),\n        credentials: 'include'\n    });\n    return response.json();\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}