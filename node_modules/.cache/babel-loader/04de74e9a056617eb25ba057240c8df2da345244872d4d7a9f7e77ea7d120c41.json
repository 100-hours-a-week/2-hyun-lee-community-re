{"ast":null,"code":"var _jsxFileName = \"/Users/ijuhyeon/Documents/community/2-hyun-lee-community-re/my-react-app/src/pages/detailPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { fetchUserData } from \"../utils/fetchUserData.js\";\nimport { fetchPostDetails, fetchComments, deletePost, addComment, updatePostLikes, updateComment, updatePostViews, userLikeStatus } from \"../api/postApi.js\";\nimport Header from \"../components/Header\";\nimport PostHeader from \"../components/PostHeader\";\nimport CommentsSection from \"../components/CommentsSection\";\nimport ConfirmationModal from \"../components/ConfirmationModal\";\nimport { getImageUrl } from \"../api/userApi\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DetailPost = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const post_id = params.get(\"post_id\");\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [likeCount, setLikeCount] = useState(0);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      const currentUser = await fetchUserData();\n      if (currentUser) setCurrentUser(currentUser);\n      try {\n        const postDetails = await fetchPostDetails(post_id);\n        await updatePostViews(post_id);\n        console.log(postDetails);\n        setPost(postDetails.posts[0]);\n        setLikeCount(postDetails.posts[0].likes_count);\n        setUserId(postDetails.user_id);\n        const commentResults = await fetchComments(post_id);\n        setComments(commentResults.comments);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    fetchData();\n  }, [post_id]);\n  const handleLike = async () => {\n    try {\n      const result = await userLikeStatus(post_id);\n      const liked = result.result.is_exist;\n      if (liked) {\n        setLikeCount(prev => prev - 1);\n      } else {\n        setLikeCount(prev => prev + 1);\n      }\n      await updatePostLikes(post_id, userId);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const handleEditPost = async () => {\n    navigate(`/edit-post?post_id=${post_id}`);\n  };\n  const handleDeletePost = async () => {\n    setModalContent({\n      title: \"게시글 삭제\",\n      message: \"게시글을 삭제하시겠습니까? 복구할 수 없습니다.\",\n      onConfirm: async () => {\n        try {\n          await deletePost(post_id);\n          navigate(\"/board\");\n        } catch (error) {\n          console.error(\"Error:\", error);\n        }\n      }\n    });\n    setIsModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"\\uC544\\uBB34\\uB9D0 \\uB300\\uC794\\uCE58\",\n      profileImage: currentUser ? getImageUrl(currentUser.userInfo.profile_image) : null,\n      onBack: () => navigate(\"/board\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-container\",\n      children: [post && /*#__PURE__*/_jsxDEV(PostHeader, {\n        post: post,\n        likeCount: likeCount,\n        handleLike: handleLike,\n        userId: userId,\n        handleDeletePost: handleDeletePost,\n        handleEditPost: handleEditPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentsSection, {\n        comments: comments,\n        postId: post_id,\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      show: isModalOpen,\n      title: modalContent.title,\n      message: modalContent.message,\n      onConfirm: modalContent.onConfirm,\n      onCancel: () => setIsModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(DetailPost, \"5GYKoSGe3b9Rlfir4uJJFT8//M0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = DetailPost;\nexport default DetailPost;\nvar _c;\n$RefreshReg$(_c, \"DetailPost\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","fetchUserData","fetchPostDetails","fetchComments","deletePost","addComment","updatePostLikes","updateComment","updatePostViews","userLikeStatus","Header","PostHeader","CommentsSection","ConfirmationModal","getImageUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","DetailPost","_s","location","params","URLSearchParams","search","post_id","get","navigate","post","setPost","comments","setComments","likeCount","setLikeCount","currentUser","setCurrentUser","userId","setUserId","isModalOpen","setIsModalOpen","modalContent","setModalContent","fetchData","postDetails","console","log","posts","likes_count","user_id","commentResults","error","handleLike","result","liked","is_exist","prev","handleEditPost","handleDeletePost","title","message","onConfirm","children","profileImage","userInfo","profile_image","onBack","fileName","_jsxFileName","lineNumber","columnNumber","className","postId","show","onCancel","_c","$RefreshReg$"],"sources":["/Users/ijuhyeon/Documents/community/2-hyun-lee-community-re/my-react-app/src/pages/detailPost.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { fetchUserData } from \"../utils/fetchUserData.js\"; \n\nimport {\n    fetchPostDetails,\n    fetchComments,\n    deletePost,\n    addComment,\n    updatePostLikes,\n    updateComment,\n    updatePostViews,\n    userLikeStatus,\n  } from \"../api/postApi.js\";\nimport Header from \"../components/Header\";\nimport PostHeader from \"../components/PostHeader\";\nimport CommentsSection from \"../components/CommentsSection\"\nimport ConfirmationModal from \"../components/ConfirmationModal\";\nimport { getImageUrl } from \"../api/userApi\";\n\n\n\n\nconst DetailPost = () =>{\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    const post_id = params.get(\"post_id\");\n    const navigate = useNavigate();\n    const [post, setPost] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [likeCount, setLikeCount] = useState(0);\n    const [currentUser, setCurrentUser] = useState(null);\n    const [userId, setUserId] = useState(null);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [modalContent, setModalContent] = useState({});\n\n    useEffect( ()=>{\n        const fetchData = async () =>{\n            const currentUser = await fetchUserData();\n            if(currentUser) setCurrentUser(currentUser);\n\n             try {\n                const postDetails = await fetchPostDetails(post_id);\n                await updatePostViews(post_id);\n                console.log(postDetails);\n                setPost(postDetails.posts[0]);\n                setLikeCount(postDetails.posts[0].likes_count);\n                setUserId(postDetails.user_id);\n\n                const commentResults = await fetchComments(post_id);\n                setComments(commentResults.comments);\n            } catch (error) {\n                console.error(\"Error:\", error);\n            }\n        }\n        fetchData();\n    },[post_id]);\n    \n    const handleLike = async () =>{\n        try {\n            const result = await userLikeStatus(post_id);\n    \n            const liked = result.result.is_exist;\n      \n            if (liked) {\n              setLikeCount((prev) => prev - 1);\n            } else {\n              setLikeCount((prev) => prev + 1);\n            }\n      \n            await updatePostLikes(post_id, userId);\n          } catch (error) {\n            console.error(\"Error:\", error);\n          }\n    };\n    const handleEditPost = async ()=>{\n        navigate(`/edit-post?post_id=${post_id}`)\n    }\n\n    const handleDeletePost = async () => {\n        setModalContent({\n            title: \"게시글 삭제\",\n            message: \"게시글을 삭제하시겠습니까? 복구할 수 없습니다.\",\n            onConfirm: async () => {\n              try {\n                await deletePost(post_id);\n                navigate(\"/board\");\n              } catch (error) {\n                console.error(\"Error:\", error);\n              }\n            },\n          });\n          setIsModalOpen(true);\n    };\n    \n\n    \n\n\n\n    return (\n        <>\n        <Header title=\"아무말 대잔치\" profileImage={currentUser ? getImageUrl(currentUser.userInfo.profile_image) : null} onBack={()=> navigate(\"/board\")} />\n        <div className=\"post-container\">\n        {post && (\n          <PostHeader\n            post={post}\n            likeCount={likeCount}\n            handleLike={handleLike}\n            userId={userId}\n            handleDeletePost={handleDeletePost}\n            handleEditPost ={handleEditPost}\n          />\n        )}\n         <CommentsSection\n          comments={comments}\n          postId={post_id}\n          userId={userId}\n        />\n        </div>\n        {isModalOpen && (\n        <ConfirmationModal\n          show={isModalOpen}\n          title={modalContent.title}\n          message={modalContent.message}\n          onConfirm={modalContent.onConfirm}\n          onCancel={() => setIsModalOpen(false)}\n        />\n      )}\n        </>\n    )\n    \n\n}\n\nexport default DetailPost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}