{"ast":null,"code":"var _jsxFileName = \"/Users/ijuhyeon/Documents/community/2-hyun-lee-community-re/my-react-app/src/pages/detailPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { fetchUserData } from \"../utils/fetchUserData.js\";\nimport { fetchPostDetails, fetchComments, deletePost, deleteComment, addComment, updatePostLikes, updateComment, updatePostViews, userLikeStatus } from \"../api/postApi.js\";\nimport Header from \"../components/Header\";\nimport PostHeader from \"../components/PostHeader\";\nimport CommentsSection from \"../components/CommentsSection\";\nimport ConfirmationModal from \"../components/ConfirmationModal\";\nimport { getImageUrl } from \"../api/userApi\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DetailPost = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const post_id = params.get(\"post_id\");\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [commentContent, setCommentContent] = useState(\"\");\n  const [likeCount, setLikeCount] = useState(0);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      const currentUser = await fetchUserData();\n      if (currentUser) setCurrentUser(currentUser);\n      try {\n        const postDetails = await fetchPostDetails(post_id);\n        await updatePostViews(post_id);\n        console.log(postDetails);\n        setPost(postDetails.posts[0]);\n        setLikeCount(postDetails.posts[0].likes_count);\n        setUserId(postDetails.user_id);\n        const commentResults = await fetchComments(post_id);\n        setComments(commentResults.comments);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    fetchData();\n  }, [post_id]);\n  const handleLike = async () => {\n    try {\n      const result = await userLikeStatus(post_id);\n      const liked = result.result.is_exist;\n      if (liked) {\n        setLikeCount(prev => prev - 1);\n      } else {\n        setLikeCount(prev => prev + 1);\n      }\n      await updatePostLikes(post_id, userId);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const handleDeletePost = async () => {\n    setModalContent({\n      title: \"게시글 삭제\",\n      message: \"게시글을 삭제하시겠습니까? 복구할 수 없습니다.\",\n      onConfirm: async () => {\n        try {\n          await deletePost(post_id);\n          navigate(\"/board\");\n        } catch (error) {\n          console.error(\"Error:\", error);\n        }\n      }\n    });\n    setIsModalOpen(true);\n  };\n  const handleAddComment = async () => {\n    if (!commentContent.trim()) {\n      alert(\"댓글 내용을 입력해주세요.\");\n      return;\n    }\n    try {\n      if (isEditing) {\n        const updatedComment = await updateComment(post_id, editingCommentId, commentContent);\n        setComments(prev => prev.map(comment => comment.comment_id === editingCommentId ? updatedComment.comments[0] : comment));\n        setIsEditing(false);\n        setEditingCommentId(null);\n      } else {\n        const newComment = await addComment(post_id, commentContent);\n        console.log(\"New Comment Data:\", newComment.comment);\n        setComments(prev => [...prev, newComment.comment]);\n      }\n      setCommentContent(\"\");\n    } catch (error) {\n      console.error(\"Error :\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"\\uC544\\uBB34\\uB9D0 \\uB300\\uC794\\uCE58\",\n      profileImage: currentUser ? getImageUrl(currentUser.userInfo.profile_image) : null,\n      onBack: () => navigate(\"/board\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-container\",\n      children: [post && /*#__PURE__*/_jsxDEV(PostHeader, {\n        post: post,\n        likeCount: likeCount,\n        handleLike: handleLike,\n        userId: userId,\n        handleDeletePost: handleDeletePost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentsSection, {\n        comments: comments,\n        postId: post_id,\n        setComments: setComments,\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      show: isModalOpen,\n      title: modalContent.title,\n      message: modalContent.message,\n      onConfirm: modalContent.onConfirm,\n      onCancel: () => setIsModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(DetailPost, \"wxiy0onkXxnjHq4/6oZKSyimzxs=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = DetailPost;\nexport default DetailPost;\nvar _c;\n$RefreshReg$(_c, \"DetailPost\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","fetchUserData","fetchPostDetails","fetchComments","deletePost","deleteComment","addComment","updatePostLikes","updateComment","updatePostViews","userLikeStatus","Header","PostHeader","CommentsSection","ConfirmationModal","getImageUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","DetailPost","_s","location","params","URLSearchParams","search","post_id","get","navigate","post","setPost","comments","setComments","isEditing","setIsEditing","editingCommentId","setEditingCommentId","commentContent","setCommentContent","likeCount","setLikeCount","currentUser","setCurrentUser","userId","setUserId","isModalOpen","setIsModalOpen","modalContent","setModalContent","fetchData","postDetails","console","log","posts","likes_count","user_id","commentResults","error","handleLike","result","liked","is_exist","prev","handleDeletePost","title","message","onConfirm","handleAddComment","trim","alert","updatedComment","map","comment","comment_id","newComment","children","profileImage","userInfo","profile_image","onBack","fileName","_jsxFileName","lineNumber","columnNumber","className","postId","show","onCancel","_c","$RefreshReg$"],"sources":["/Users/ijuhyeon/Documents/community/2-hyun-lee-community-re/my-react-app/src/pages/detailPost.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { fetchUserData } from \"../utils/fetchUserData.js\"; \n\nimport {\n    fetchPostDetails,\n    fetchComments,\n    deletePost,\n    deleteComment,\n    addComment,\n    updatePostLikes,\n    updateComment,\n    updatePostViews,\n    userLikeStatus,\n  } from \"../api/postApi.js\";\nimport Header from \"../components/Header\";\nimport PostHeader from \"../components/PostHeader\";\nimport CommentsSection from \"../components/CommentsSection\"\nimport ConfirmationModal from \"../components/ConfirmationModal\";\nimport { getImageUrl } from \"../api/userApi\";\n\n\n\n\nconst DetailPost = () =>{\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    const post_id = params.get(\"post_id\");\n    const navigate = useNavigate();\n    const [post, setPost] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [isEditing, setIsEditing] = useState(false);\n    const [editingCommentId, setEditingCommentId] = useState(null);\n    const [commentContent, setCommentContent] = useState(\"\");\n    const [likeCount, setLikeCount] = useState(0);\n    const [currentUser, setCurrentUser] = useState(null);\n    const [userId, setUserId] = useState(null);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [modalContent, setModalContent] = useState({});\n\n    useEffect( ()=>{\n        const fetchData = async () =>{\n            const currentUser = await fetchUserData();\n            if(currentUser) setCurrentUser(currentUser);\n\n             try {\n                const postDetails = await fetchPostDetails(post_id);\n                await updatePostViews(post_id);\n                console.log(postDetails);\n                setPost(postDetails.posts[0]);\n                setLikeCount(postDetails.posts[0].likes_count);\n                setUserId(postDetails.user_id);\n\n                const commentResults = await fetchComments(post_id);\n                setComments(commentResults.comments);\n            } catch (error) {\n                console.error(\"Error:\", error);\n            }\n        }\n        fetchData();\n    },[post_id]);\n    \n    const handleLike = async () =>{\n        try {\n            const result = await userLikeStatus(post_id);\n    \n            const liked = result.result.is_exist;\n      \n            if (liked) {\n              setLikeCount((prev) => prev - 1);\n            } else {\n              setLikeCount((prev) => prev + 1);\n            }\n      \n            await updatePostLikes(post_id, userId);\n          } catch (error) {\n            console.error(\"Error:\", error);\n          }\n    };\n\n    const handleDeletePost = async () => {\n        setModalContent({\n            title: \"게시글 삭제\",\n            message: \"게시글을 삭제하시겠습니까? 복구할 수 없습니다.\",\n            onConfirm: async () => {\n              try {\n                await deletePost(post_id);\n                navigate(\"/board\");\n              } catch (error) {\n                console.error(\"Error:\", error);\n              }\n            },\n          });\n          setIsModalOpen(true);\n      };\n    \n    const handleAddComment = async () => {\n        if (!commentContent.trim()) {\n          alert(\"댓글 내용을 입력해주세요.\");\n          return;\n        }\n    \n        try {\n          if (isEditing) {\n            const updatedComment = await updateComment(post_id, editingCommentId, commentContent);\n            setComments((prev) =>\n              prev.map((comment) =>\n                comment.comment_id === editingCommentId ? updatedComment.comments[0] : comment\n              )\n            );\n            setIsEditing(false);\n            setEditingCommentId(null);\n          } else {\n            const newComment = await addComment(post_id, commentContent);\n            console.log(\"New Comment Data:\", newComment.comment);\n            setComments((prev) => [...prev,newComment.comment]);\n          }\n          setCommentContent(\"\");\n        } catch (error) {\n          console.error(\"Error :\", error);\n        }\n    };\n    \n\n\n\n    return (\n        <>\n        <Header title=\"아무말 대잔치\" profileImage={currentUser ? getImageUrl(currentUser.userInfo.profile_image) : null} onBack={()=> navigate(\"/board\")} />\n        <div className=\"post-container\">\n        {post && (\n          <PostHeader\n            post={post}\n            likeCount={likeCount}\n            handleLike={handleLike}\n            userId={userId}\n            handleDeletePost={handleDeletePost}\n          />\n        )}\n         <CommentsSection\n          comments={comments}\n          postId={post_id}\n          setComments={setComments}\n          userId={userId}\n        />\n        </div>\n        {isModalOpen && (\n        <ConfirmationModal\n          show={isModalOpen}\n          title={modalContent.title}\n          message={modalContent.message}\n          onConfirm={modalContent.onConfirm}\n          onCancel={() => setIsModalOpen(false)}\n        />\n      )}\n        </>\n    )\n    \n\n}\n\nexport default DetailPost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}