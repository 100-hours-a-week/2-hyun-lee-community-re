{"ast":null,"code":"export function validateEmail(email) {\n  if (!email) {\n    return {\n      valid: false,\n      message: \"*이메일을 입력해주세요.\"\n    };\n  } else if (!/^[a-zA-Z0-9.!_%+-]+@[a-zA-Z]+\\.[a-zA-Z]+$/.test(email)) {\n    return {\n      valid: false,\n      message: \"*올바른 이메일 주소 형식을 입력해주세요. (예: example@example.com)\"\n    };\n  } else {\n    return {\n      valid: true,\n      message: \"\"\n    };\n  }\n}\nexport function validatePassword(password) {\n  if (!password) {\n    return {\n      valid: false,\n      message: \"*비밀번호를 입력해주세요.\"\n    };\n  } else if (password.length < 8 || password.length > 20 || !/[A-Z]/.test(password) || !/[a-z]/.test(password) || !/[0-9]/.test(password) || !/[!@#$%^&*(),.?\":{}|<>=+\\_\\-~`//]/.test(password)) {\n    return {\n      valid: false,\n      message: \"*비밀번호는 8자 이상, 20자 이하이며, 대문자, 소문자, 숫자, 특수문자를 각각 최소 1개 포함해야 합니다.\"\n    };\n  } else {\n    return {\n      valid: true,\n      message: \"\"\n    };\n  }\n}\nexport function validateConfirmPassword(password, confirmPassword) {\n  if (!confirmPassword) {\n    return {\n      valid: false,\n      message: \"*비밀번호를 한 번 더 입력해주세요.\"\n    };\n  } else if (password !== confirmPassword) {\n    return {\n      valid: false,\n      message: \"*비밀번호가 다릅니다.\"\n    };\n  } else {\n    return {\n      valid: true,\n      message: \"\"\n    };\n  }\n}\nexport function validateNickname(nickname) {\n  if (!nickname) {\n    return {\n      valid: false,\n      message: \"*닉네임을 입력해주세요.\"\n    };\n  } else if (nickname.length > 10) {\n    return {\n      valid: false,\n      message: \"*닉네임은 최대 10자까지 작성 가능합니다.\"\n    };\n  } else if (/\\s/.test(nickname)) {\n    return {\n      valid: false,\n      message: \"*띄어쓰기를 없애주세요.\"\n    };\n  } else {\n    return {\n      valid: true,\n      message: \"\"\n    };\n  }\n}\nexport function validateProfile(profileImage) {\n  if (!profileImage) {\n    return {\n      valid: false,\n      message: \"*프로필 사진을 추가해주세요.\"\n    };\n  } else {\n    return {\n      valid: true,\n      message: \"\"\n    };\n  }\n}\nexport function validatePostTitle(postTitle) {\n  if (postTitle.length > 26) {\n    return {\n      valid: false,\n      message: \"*제목을 26자 이하로 작성해주세요.\"\n    };\n  } else if (!postTitle) {\n    return {\n      valid: false,\n      message: \"*제목을 입력해주세요.\"\n    };\n  } else {\n    return {\n      valid: true,\n      message: \"\"\n    };\n  }\n}\nexport function validatePostContent(postContent) {\n  if (!postContent) {\n    return {\n      valid: false,\n      message: \"*내용을 입력해주세요.\"\n    };\n  } else {\n    return {\n      valid: true,\n      message: \"\"\n    };\n  }\n}","map":{"version":3,"names":["validateEmail","email","valid","message","test","validatePassword","password","length","validateConfirmPassword","confirmPassword","validateNickname","nickname","validateProfile","profileImage","validatePostTitle","postTitle","validatePostContent","postContent"],"sources":["/Users/ijuhyeon/Documents/community/2-hyun-lee-community-re/src/utils/validators.js"],"sourcesContent":["export function validateEmail(email) {\n    if (!email) {\n      return { valid: false, message: \"*이메일을 입력해주세요.\" };\n    } else if (!/^[a-zA-Z0-9.!_%+-]+@[a-zA-Z]+\\.[a-zA-Z]+$/.test(email)) {\n      return { valid: false, message: \"*올바른 이메일 주소 형식을 입력해주세요. (예: example@example.com)\" };\n    } else {\n      return { valid: true, message: \"\" };\n    }\n  }\n  \n  export function validatePassword(password) {\n    if (!password) {\n      return { valid: false, message: \"*비밀번호를 입력해주세요.\" };\n    } else if (\n      password.length < 8 ||\n      password.length > 20 ||\n      !/[A-Z]/.test(password) ||\n      !/[a-z]/.test(password) ||\n      !/[0-9]/.test(password) ||\n      !/[!@#$%^&*(),.?\":{}|<>=+\\_\\-~`//]/.test(password)\n    ) {\n      return { valid: false, message: \"*비밀번호는 8자 이상, 20자 이하이며, 대문자, 소문자, 숫자, 특수문자를 각각 최소 1개 포함해야 합니다.\" };\n    } else {\n      return { valid: true, message: \"\" };\n    }\n  }\n  \n  export function validateConfirmPassword(password, confirmPassword) {\n    if (!confirmPassword) {\n      return { valid: false, message: \"*비밀번호를 한 번 더 입력해주세요.\" };\n    } else if (password !== confirmPassword) {\n      return { valid: false, message: \"*비밀번호가 다릅니다.\" };\n    } else {\n      return { valid: true, message: \"\" };\n    }\n  }\n  \n  export function validateNickname(nickname) {\n    if (!nickname) {\n      return { valid: false, message: \"*닉네임을 입력해주세요.\" };\n    } else if (nickname.length > 10) {\n      return { valid: false, message: \"*닉네임은 최대 10자까지 작성 가능합니다.\" };\n    } else if (/\\s/.test(nickname)) {\n      return { valid: false, message: \"*띄어쓰기를 없애주세요.\" };\n    } else {\n      return { valid: true, message: \"\" };\n    }\n  }\n  \n  export function validateProfile(profileImage) {\n    if (!profileImage) {\n      return { valid: false, message: \"*프로필 사진을 추가해주세요.\" };\n    } else {\n      return { valid: true, message: \"\" };\n    }\n  }\n  \n  export function validatePostTitle(postTitle) {\n    if (postTitle.length > 26) {\n      return { valid: false, message: \"*제목을 26자 이하로 작성해주세요.\" };\n    } else if (!postTitle) {\n      return { valid: false, message: \"*제목을 입력해주세요.\" };\n    } else {\n      return { valid: true, message: \"\" };\n    }\n  }\n  \n  export function validatePostContent(postContent) {\n    if (!postContent) {\n      return { valid: false, message: \"*내용을 입력해주세요.\" };\n    } else {\n      return { valid: true, message: \"\" };\n    }\n  }\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}