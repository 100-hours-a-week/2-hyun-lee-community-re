{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getUserProfile, updateUserProfile, deleteUserComments, deleteUserPosts, deleteUserAccount } from \"../api/userApi\";\nimport { validateNickname, validateProfile } from \"../utils/validators\";\nimport { escapeHtml } from \"../utils/escape\";\nimport ConfirmationModal from \"../components/ConfirmationModal\";\nimport { fetchUserData } from \"../utils/fetchUserData\";\nconst EditUser = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [nickname, setNickname] = useState(\"\");\n  const [profileImage, setProfileImage] = useState(null);\n  const [nicknameError, setNicknameError] = useState(\"\");\n  const [profileImageError, setProfileImageError] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const navigate = useNavigate();\n  const isFormValid = profileImage && nicknameError && !nicknameError && !profileImageError;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userInfo = await fetchUserData();\n        if (userInfo && userInfo.userInfo) {\n          setUser(userInfo);\n          setNickname(userInfo.userInfo.nickname);\n          setProfileImage(userInfo.userInfo.profileImage);\n        }\n      } catch (error) {\n        console.error(\"Error :\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleNicknameChange = e => {\n    const value = e.target.value;\n    setNickname(value);\n    const {\n      valid,\n      message\n    } = validateNickname(value);\n    setNicknameError(valid ? \"\" : message);\n  };\n  const handleProfileImageChange = image => {\n    setProfileImage(image);\n    const {\n      valid,\n      message\n    } = validateProfile(image);\n    setProfileImageError(valid ? \"\" : message);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isFormValid) {\n      const formData = new FormData();\n      formData.append(\"nickname\", escapeHtml(nickname));\n      formData.append(\"profileImage\", profileImage);\n      try {\n        const response = await updateUserProfile(formData);\n        if (!response.success) {\n          if (response.message.includes(\"중복된 닉네임 입니다.\")) {\n            setNicknameError(\"*중복된 닉네임입니다.\");\n          } else {\n            alert(\"회원 정보 수정 실패\");\n          }\n        } else {\n          alert(response.message);\n          setTimeout(() => {\n            navigate(\"/board\");\n          }, 2000);\n        }\n      } catch (error) {\n        console.error(\"Error :\", error);\n      }\n    }\n  };\n  const handleWithdraw = () => {\n    setIsModalOpen(true);\n  };\n  const handleConfirmWithdraw = async () => {\n    try {\n      await deleteUserComments(user.user_id);\n      await deleteUserPosts(user.user_id);\n      await deleteUserAccount(user.user_id);\n      alert(\"회원 탈퇴가 완료되었습니다.\");\n      navigate(\"/login\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"회원 탈퇴에 실패했습니다.\");\n    }\n    setIsModalOpen(false);\n  };\n};\n_s(EditUser, \"cBdUW1q8r4B3m86T3L35SVLqoBQ=\", false, function () {\n  return [useNavigate];\n});\n_c = EditUser;\nexport default EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getUserProfile","updateUserProfile","deleteUserComments","deleteUserPosts","deleteUserAccount","validateNickname","validateProfile","escapeHtml","ConfirmationModal","fetchUserData","EditUser","_s","user","setUser","nickname","setNickname","profileImage","setProfileImage","nicknameError","setNicknameError","profileImageError","setProfileImageError","isModalOpen","setIsModalOpen","navigate","isFormValid","fetchData","userInfo","error","console","handleNicknameChange","e","value","target","valid","message","handleProfileImageChange","image","handleSubmit","preventDefault","formData","FormData","append","response","success","includes","alert","setTimeout","handleWithdraw","handleConfirmWithdraw","user_id","_c","$RefreshReg$"],"sources":["/Users/ijuhyeon/Documents/community/2-hyun-lee-community-re/my-react-app/src/pages/editUser.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getUserProfile, updateUserProfile, deleteUserComments, deleteUserPosts, deleteUserAccount } from \"../api/userApi\";\nimport { validateNickname, validateProfile } from \"../utils/validators\";\nimport { escapeHtml } from \"../utils/escape\";\nimport ConfirmationModal from \"../components/ConfirmationModal\";\nimport { fetchUserData } from \"../utils/fetchUserData\"\n\nconst EditUser = () =>{\n    const [user, setUser]= useState(null);\n    const [nickname, setNickname] = useState(\"\");\n    const [profileImage, setProfileImage] = useState(null);\n    const [nicknameError, setNicknameError] = useState(\"\");\n    const [profileImageError, setProfileImageError] = useState(\"\");\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    \n    const navigate = useNavigate();\n\n    const isFormValid = profileImage && nicknameError && !nicknameError && !profileImageError;\n\n    useEffect (()=>{\n        const fetchData = async ()=>{\n            try {\n                const userInfo = await fetchUserData();\n                if (userInfo && userInfo.userInfo) {\n                    setUser(userInfo);\n                    setNickname(userInfo.userInfo.nickname); \n                    setProfileImage(userInfo.userInfo.profileImage); \n                } \n            } catch (error) {\n                console.error(\"Error :\", error);\n            }\n        }\n\n        fetchData();\n    },[]);\n    \n\n    const handleNicknameChange = (e) =>{\n        const value = e.target.value;\n        setNickname(value);\n\n        const { valid, message } = validateNickname(value);\n        setNicknameError(valid ? \"\" : message);\n    }\n\n    const handleProfileImageChange = (image) =>{\n        setProfileImage(image);\n        const { valid, message } = validateProfile(image);\n        setProfileImageError(valid ? \"\" : message);\n        \n    }\n\n    const handleSubmit = async (e) =>{\n        e.preventDefault();\n        if(isFormValid){\n            \n            const formData = new FormData();\n            formData.append(\"nickname\",escapeHtml(nickname));\n            formData.append(\"profileImage\",profileImage);\n\n            try{\n                const response = await updateUserProfile(formData);\n                if(!response.success){\n                    if(response.message.includes(\"중복된 닉네임 입니다.\")){\n                        setNicknameError(\"*중복된 닉네임입니다.\");\n                    } else{\n                        alert(\"회원 정보 수정 실패\");\n                    }\n                } else{\n                    alert(response.message);\n                    setTimeout(()=>{\n                        navigate(\"/board\");\n                    },2000);\n                }\n            } catch (error) {\n                console.error(\"Error :\", error);\n              }\n        \n        }\n\n    }\n\n    const handleWithdraw = () => {\n        setIsModalOpen(true);\n    };\n\n    const handleConfirmWithdraw = async () => {\n        try {\n          await deleteUserComments(user.user_id);\n          await deleteUserPosts(user.user_id);\n          await deleteUserAccount(user.user_id);\n          alert(\"회원 탈퇴가 완료되었습니다.\");\n          navigate(\"/login\");\n        } catch (error) {\n          console.error(\"Error:\", error);\n          alert(\"회원 탈퇴에 실패했습니다.\");\n        }\n        setIsModalOpen(false);\n      };\n\n}\n\nexport default EditUser;\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}