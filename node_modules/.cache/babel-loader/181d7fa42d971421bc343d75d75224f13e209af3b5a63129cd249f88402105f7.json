{"ast":null,"code":"var _jsxFileName = \"/Users/ijuhyeon/Documents/community/2-hyun-lee-community-re/my-react-app/src/components/CommentsSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { addComment, deleteComment } from \"../api/postApi\";\nimport { formatDate } from \"../utils/formatDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentsSection = ({\n  comments,\n  postId,\n  setComments,\n  userId\n}) => {\n  _s();\n  const [commentContent, setCommentContent] = useState(\"\");\n  const handleAddComment = async () => {\n    if (!commentContent.trim()) {\n      alert(\"댓글 내용을 입력해주세요.\");\n      return;\n    }\n    try {\n      const newComment = await addComment(postId, commentContent);\n      setComments(prev => [...prev, newComment.comment]);\n      setCommentContent(\"\");\n    } catch (error) {\n      console.error(\"Error :\", error);\n    }\n  };\n  const handleDeleteComment = async comment_id => {\n    try {\n      await deleteComment(postId, comment_id);\n      setComments(prev => prev.filter(comment => comment.comment_id !== comment_id));\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB313\\uAE00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.comment_content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: formatDate(comment.create_at)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), userId === comment.user_id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteComment(comment.comment_id),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this)]\n    }, comment.comment_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: commentContent,\n      onChange: e => setCommentContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddComment,\n      children: \"\\uB313\\uAE00 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n_s(CommentsSection, \"t65MBZakqqRzdzaHP8oyCbX9XIA=\");\n_c = CommentsSection;\nexport default CommentsSection;\nvar _c;\n$RefreshReg$(_c, \"CommentsSection\");","map":{"version":3,"names":["React","useState","addComment","deleteComment","formatDate","jsxDEV","_jsxDEV","CommentsSection","comments","postId","setComments","userId","_s","commentContent","setCommentContent","handleAddComment","trim","alert","newComment","prev","comment","error","console","handleDeleteComment","comment_id","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment_content","create_at","user_id","onClick","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/ijuhyeon/Documents/community/2-hyun-lee-community-re/my-react-app/src/components/CommentsSection.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { addComment, deleteComment } from \"../api/postApi\";\nimport { formatDate } from \"../utils/formatDate\";\n\nconst CommentsSection = ({ comments, postId, setComments, userId }) => {\n    const [commentContent, setCommentContent] = useState(\"\");\n  \n    const handleAddComment = async () => {\n      if (!commentContent.trim()) {\n        alert(\"댓글 내용을 입력해주세요.\");\n        return;\n      }\n  \n      try {\n        const newComment = await addComment(postId, commentContent);\n        setComments((prev) => [...prev, newComment.comment]);\n        setCommentContent(\"\");\n      } catch (error) {\n        console.error(\"Error :\", error);\n      }\n    };\n  \n    const handleDeleteComment = async (comment_id) => {\n      try {\n        await deleteComment(postId, comment_id);\n        setComments((prev) => prev.filter((comment) => comment.comment_id !== comment_id));\n      } catch (error) {\n        console.error(\"Error deleting comment:\", error);\n      }\n    };\n  \n    return (\n      <div className=\"comments-section\">\n        <h2>댓글</h2>\n        {comments.map((comment) => (\n          <div key={comment.comment_id} className=\"comment-item\">\n            <p>{comment.comment_content}</p>\n            <small>{formatDate(comment.create_at)}</small>\n            {userId === comment.user_id && (\n              <button onClick={() => handleDeleteComment(comment.comment_id)}>삭제</button>\n            )}\n          </div>\n        ))}\n        <textarea\n          value={commentContent}\n          onChange={(e) => setCommentContent(e.target.value)}\n        />\n        <button onClick={handleAddComment}>댓글 추가</button>\n      </div>\n    );\n  };\n  \n  export default CommentsSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}